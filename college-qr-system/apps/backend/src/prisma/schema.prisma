// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

model User {
  id        Int      @id @default(autoincrement())
  rollNo    String   @unique
  name      String
  password  String
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
}

model Student {
  id            String        @id @default(cuid())
  rollNumber    String        @unique
  name          String
  email         String        @unique
  passwordHash  String
  qrActivities  QRActivity[]
  attendance    Attendance[]
  resetRequests PasswordReset[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Admin {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  role         Role     @default(ADMIN)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model QRActivity {
  id        String   @id @default(cuid())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  scannedAt DateTime @default(now())
  isValid   Boolean
}

model Attendance {
  id        String             @id @default(cuid())
  student   Student            @relation(fields: [studentId], references: [id])
  studentId String
  date      DateTime
  status    AttendanceStatus
}

model PasswordReset {
  id        String   @id @default(cuid())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  token     String   @unique       // secure random token
  expiresAt DateTime               // expiry (e.g., 15 minutes)
  used      Boolean  @default(false) // mark as used after reset
  createdAt DateTime @default(now())
}

enum Role {
  STUDENT
  ADMIN
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
}
